{"version":3,"sources":["component/Header.jsx","models/Movies.js","component/Search.jsx","component/movie/MovieImage.jsx","component/movie/MovieTextContainer.jsx","models/SupabaseClient.js","utils/addFavorite.js","utils/unFavorite.js","component/movie/MovieDetail.jsx","component/TrendContainer.jsx","component/Footer.jsx","component/FabComponent.jsx","component/Auth.jsx","utils/favoriteCount.js","utils/getFavorite.js","component/App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","anchorTopRight","transform","backgroundColor","color","zIndex","favoritLink","minWidth","minHeight","cursor","Header","props","classes","className","onClick","Badge","badgeContent","favoriteQuantity","badge","showZero","Movies","getMovie","axios","get","process","movieData","console","log","data","results","getGenres","genresData","genres","getMovieSearch","query","getDetailMovie","id","theme","searchForm","margin","spacing","borderColor","width","borderRadius","noBorder","border","input","marginLeft","Search","useState","textInput","setTextInput","TextField","variant","InputProps","endAdornment","InputAdornment","position","event","handleClick","style","notchedOutline","placeholder","value","onChange","target","imgStyle","display","backgroundSize","backgroundRepeat","backgroundPosition","objectFit","MovieImage","alt","name","effect","src","url","MovieTextContainer","genreArray","filter","res","idGenre","includes","title","undefined","map","genre","index","Chip","icon","label","rating","popularity","release","overview","Supabase","createClient","addFavorite","a","poster_path","original_title","genre_ids","vote_average","runtime","release_date","homepage","budget","email","auth","user","insert","from","error","alert","message","unFavorite","delete","match","root","height","top","left","overflow","boxShadow","shadows","padding","media","gridRowStart","gridRowEnd","closeButton","fontWeight","textDecoration","makeCenter","justifyContent","alignItems","watchButton","MovieDetail","movieDetail","setMovieDetail","isFavorite","setIsFavorite","isLoading","setLoading","useEffect","checkIsFavorite","select","status","length","handleFavoriteClick","checkFavoriteCount","handleUnFavoriteClick","LoadingIndicator","withStyles","CircularProgress","Card","CardActionArea","CardMedia","image","CardContent","Favorite","FavoriteBorder","toLocaleString","fontSize","window","open","handleClose","WaitForMovie","TrendContainer","movieDetailData","setMovieDetailData","isModalOpen","setIsModalOpen","movieTrends","movies","movieGenres","heading","movie","getMovieDetail","closeHandleBack","Footer","year","Date","getFullYear","textAlign","fab","bottom","right","palette","common","white","extendedIcon","marginRight","FabComponent","Fab","handleBack","container","paddingTop","buttonSubmit","Auth","loading","setEmail","handleLogin","signIn","error_description","Container","maxWidth","marginBottom","Grid","item","xs","fullWidth","size","Button","type","preventDefault","favoriteCount","userEmail","getFavorite","App","session","setSession","setMovies","setMovieGenres","isSearch","setSearch","setFavoriteQuantity","setHeading","handleClickSearch","useCallback","text","getSearchMovie","isAppear","getDataMovies","handleCheckFavoriteQuantity","quantity","onFavoriteButtonClick","favorite","onAuthStateChange","_event","getMovieGenres","Boolean","location","hostname","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c34f714b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  anchorTopRight: {\r\n    transform: 'translate(50%, -90%)',\r\n    backgroundColor: '#000000',\r\n    color: '#ffffff',\r\n    zIndex: '0',\r\n  },\r\n  favoritLink: {\r\n    color: '#000000',\r\n    minWidth: '44px',\r\n    minHeight: '44px',\r\n    cursor: 'pointer',\r\n  }\r\n}));\r\n\r\nconst Header = (props) => {\r\n  const classes = useStyles();\r\n  \r\n  return(\r\n    <header>\r\n      <h1 className='header bottom-margin'>Movie Trend</h1>\r\n      <div \r\n        className={ classes.favoritLink } \r\n        onClick={ () => {\r\n          props.onClick()\r\n          }\r\n        }\r\n      >\r\n        <Badge \r\n          badgeContent={ props.favoriteQuantity } \r\n          classes={{ badge: classes.anchorTopRight }} \r\n          showZero={ true }>\r\n            Favorite\r\n        </Badge>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import axios from 'axios';\r\n\r\nconst Movies = {\r\n  async getMovie() {\r\n    let movieData;\r\n    try {\r\n       movieData = await axios.get(`${process.env.REACT_APP_API_URL}/trending/movie/day?api_key=${process.env.REACT_APP_API_KEY}`);\r\n    }\r\n    catch(err) {\r\n      console.log(err);\r\n    }\r\n    return movieData.data.results;\r\n  },\r\n\r\n  async getGenres() {\r\n    let genresData;\r\n    try {\r\n      genresData = await axios.get(`${process.env.REACT_APP_API_URL}/genre/movie/list?api_key=${process.env.REACT_APP_API_KEY}`);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    return genresData.data.genres;\r\n  },\r\n\r\n  async getMovieSearch(query) {\r\n    let movieData;\r\n    try {\r\n      movieData = await axios.get(`${process.env.REACT_APP_API_URL}/search/movie?query=${query}&api_key=${process.env.REACT_APP_API_KEY}`);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    return movieData.data.results;\r\n  },\r\n\r\n  async getDetailMovie(id) {\r\n    let movieData;\r\n    try {\r\n      movieData = await axios.get(`${process.env.REACT_APP_API_URL}/movie/${id}?api_key=${process.env.REACT_APP_API_KEY}`);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    return movieData.data;\r\n  },\r\n}\r\nexport default Movies;\r\n","import React, { useState } from \"react\";\r\nimport { TextField, InputAdornment } from \"@material-ui/core\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchForm: {\r\n    margin: theme.spacing(1),\r\n    '& input + fieldset': {\r\n      borderColor: '#484848',\r\n    },\r\n    '& input:valid:focus + fieldset': {\r\n      borderColor: '#212121',\r\n    },\r\n    width: '95%',\r\n    backgroundColor: '#212121',\r\n    borderRadius: '35px',\r\n  },\r\n  noBorder: {\r\n    border: \"none\",\r\n  },\r\n  input: {\r\n    color: \"#ffffff\",\r\n    marginLeft: '3%',\r\n  }\r\n}));\r\n\r\nconst Search = (props) => {\r\n  const [textInput, setTextInput ] = useState('');\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (event) => {\r\n    const { value } = event.target;\r\n    setTextInput(value);\r\n  }\r\n\r\n  return(\r\n      <TextField\r\n        className={ `${classes.searchForm} bottom-margin` }\r\n        variant=\"outlined\" \r\n        InputProps={{ \r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n                <SearchIcon onClick={ (event) => {\r\n                    props.handleClick(textInput);\r\n                    setTextInput('');\r\n                }} \r\n                style={{ color: '#ffffff', cursor: 'pointer' }} \r\n                />\r\n            </InputAdornment>\r\n          ), \r\n          classes:{notchedOutline: classes.noBorder}, \r\n          className: classes.input,\r\n        }}\r\n        placeholder='Search...'\r\n        value={ textInput }\r\n        onChange={ handleChange }\r\n      />\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  imgStyle: {\r\n    borderRadius: '15px',\r\n    display: 'block',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n    objectFit: 'cover',\r\n    width: '100%',\r\n  }\r\n}));\r\n\r\nconst MovieImage = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return(\r\n    <LazyLoadImage\r\n      alt={ props.name }\r\n      effect=\"blur\"\r\n      src={ props.url } \r\n      className={ classes.imgStyle }\r\n    />\r\n  );\r\n};\r\n\r\nexport default MovieImage;\r\n","import React from \"react\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\n\r\nconst MovieTextContainer = (props) => {\r\n  const genreArray = props.genres;\r\n  let genres;\r\n\r\n  if(genreArray !== null) {\r\n    genres = genreArray.filter((res) => {\r\n      return props.idGenre.includes(res.id);\r\n    });\r\n  }\r\n\r\n  return(\r\n    <div className='movie-text-container'>\r\n      <h1 className='heading1 one-line'>{props.title}</h1>\r\n      <span className='one-line text-grey'>\r\n      {\r\n        genres === undefined \r\n        ? ''\r\n        : genres.map((genre, index) => {\r\n            return (\r\n              `${index ? ', ' : ''} ${genre.name}`\r\n            );\r\n          })\r\n      }\r\n      </span>\r\n      <span className='movie-attribute'>\r\n        <Chip \r\n          icon={ <StarIcon style={{ color: 'orange' }}/> } \r\n          label={ props.rating }\r\n          style={{ backgroundColor: '#212121', color: '#ffffff' }}\r\n        />\r\n        <Chip \r\n          icon={ <FaceIcon style={{ color: '#ffffff' }}/> } \r\n          label={ props.popularity }\r\n          style={{ backgroundColor: '#212121', color: '#ffffff' }}\r\n        />\r\n        <Chip \r\n          label={ props.release } \r\n          style={{ backgroundColor: '#212121', color: '#ffffff' }}\r\n        />\r\n        <p className='two-line'>{props.overview}</p>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieTextContainer;\r\n","import { createClient } from \"@supabase/supabase-js\";\r\n\r\nconst supbaseUrl = process.env.REACT_APP_SUPABASE_URL;\r\nconst supbaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\r\n\r\nconst Supabase = createClient(supbaseUrl, supbaseAnonKey);\r\n\r\nexport default Supabase;\r\n","import Supabase from '../models/SupabaseClient';\r\n\r\nconst addFavorite = async ({ \r\n  id,\r\n  poster_path,\r\n  original_title,\r\n  genre_ids,\r\n  vote_average,\r\n  popularity,\r\n  runtime,\r\n  release_date,\r\n  overview,\r\n  homepage,\r\n  budget, \r\n}) => {\r\n  try {\r\n    const email = Supabase.auth.user().email;\r\n\r\n    const insert = {\r\n      email: email,\r\n      id,\r\n      poster_path,\r\n      original_title,\r\n      genre_ids,\r\n      vote_average,\r\n      popularity,\r\n      runtime,\r\n      release_date,\r\n      overview,\r\n      homepage,\r\n      budget,\r\n    }\r\n\r\n    let { error } = await Supabase.from('movie_favorite').insert(insert);\r\n\r\n    if (error) throw error;\r\n  } catch (error) {\r\n    alert(error.message);\r\n  }\r\n};\r\n\r\nexport default addFavorite;\r\n","import Supabase from \"../models/SupabaseClient\";\r\n\r\nconst unFavorite = async ({ id }) => {\r\n    try {\r\n      const user = Supabase.auth.user().email;\r\n      const { error } = await Supabase\r\n        .from('movie_favorite')\r\n        .delete()\r\n        .match({ id: id, email: user });\r\n\r\n      if (error) throw error;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\nexport default unFavorite;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport { FavoriteBorder } from '@material-ui/icons';\r\nimport { Favorite } from '@material-ui/icons';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport addFavorite from '../../utils/addFavorite';\r\nimport Supabase from '../../models/SupabaseClient';\r\nimport unFavorite from '../../utils/unFavorite';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'fixed',\r\n    width: '100%',\r\n    height: '100%',\r\n    top: '0',\r\n    left: '0',\r\n    overflow: 'scroll',\r\n    backgroundColor: 'theme.palette.background.paper',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  media: {\r\n    height: '80vh',\r\n    borderRadius: '4px',\r\n    gridRowStart: '1',\r\n    gridRowEnd: '3',\r\n  },\r\n  closeButton: {\r\n    backgroundColor: '#212121',\r\n    width: '100%',\r\n    minHeight: '44px',\r\n    color: '#ffffff',\r\n    fontWeight: 'bold',\r\n    textDecoration: 'none',\r\n    cursor: 'pointer',\r\n  },\r\n  makeCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  watchButton: {\r\n    border: '2px solid #212121',\r\n    width: '100%',\r\n    minHeight: '44px',\r\n    color: '#212121',\r\n    fontWeight: 'bold',\r\n    textDecoration: 'none',\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\n\r\nconst MovieDetail = (props) => {\r\n  const [ movieDetail, setMovieDetail ] = useState(null);\r\n  const [ isFavorite, setIsFavorite ] = useState(false);\r\n  const [ isLoading, setLoading ] = useState(false);\r\n  const classes = useStyles();\r\n  \r\n  useEffect(() => {\r\n    const checkIsFavorite = async () => {\r\n      try {\r\n        setLoading(true);\r\n        let { data, error, status } = await Supabase\r\n          .from('movie_favorite')\r\n          .select('id')\r\n          .match({id: movieDetail.id});\r\n\r\n        if (error && status !== 406) throw error;\r\n\r\n        if (data.length === 1) {\r\n          setIsFavorite(true);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    setMovieDetail(props.movieDetail);\r\n    movieDetail !== null && checkIsFavorite();\r\n  }, [movieDetail, props.movieDetail]);\r\n\r\n  const handleFavoriteClick = async () => {\r\n    setIsFavorite(true);\r\n    setLoading(true);\r\n    await addFavorite({\r\n      id: movieDetail.id,\r\n      poster_path: movieDetail.poster_path,\r\n      original_title: movieDetail.original_title,\r\n      genre_ids: movieDetail.genres,\r\n      vote_average: movieDetail.vote_average,\r\n      popularity: movieDetail.popularity,\r\n      runtime: movieDetail.runtime,\r\n      release_date: movieDetail.release_date,\r\n      overview: movieDetail.overview,\r\n      homepage: movieDetail.homepage,\r\n      budget: movieDetail.budget, \r\n    });\r\n    props.checkFavoriteCount();\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleUnFavoriteClick = async () => {\r\n    setIsFavorite(false);\r\n    setLoading(true);\r\n    await unFavorite({ id: movieDetail.id });\r\n    props.checkFavoriteCount();\r\n    setLoading(false);\r\n  };\r\n\r\n  const LoadingIndicator = withStyles(() => ({\r\n    root: {\r\n      color: '#212121',\r\n      width: '64px !important',\r\n      height: '64px !important',\r\n    },\r\n  }))(CircularProgress);\r\n\r\n  return (\r\n    <Card className={ classes.root }>\r\n      { isLoading &&  <div className='loading-screen'> <LoadingIndicator /> </div>}\r\n      {movieDetail !== null &&\r\n        <div className='detail-content-wrap'>\r\n          <CardActionArea className='card-action-area'>\r\n            <CardMedia\r\n              className={ classes.media }\r\n              image={`https://image.tmdb.org/t/p/original/${movieDetail.poster_path }`}\r\n              title={ movieDetail.title }\r\n            />\r\n            <CardContent className='card-content'>\r\n              <div style={{ position: 'relative' }}>\r\n                <h1>{ movieDetail.original_title } </h1>\r\n                <span className='text-grey'>\r\n                {\r\n                  movieDetail.genres.map((genre, index) => {\r\n                    return (\r\n                      `${index ? ', ' : ''} ${genre.name}`\r\n                    );\r\n                  })\r\n                }\r\n                </span>\r\n                { isFavorite ? \r\n                  <Favorite className='button-favorite' onClick={ handleUnFavoriteClick } /> : \r\n                  <FavoriteBorder className='button-favorite' onClick={ handleFavoriteClick } /> \r\n                }\r\n              </div>\r\n              <div className='attribute-container'>\r\n                <Chip \r\n                  icon={ <StarIcon style={{ color: 'orange' }}/> } \r\n                  label={ movieDetail.vote_average }\r\n                  style={{ backgroundColor: '#212121', color: '#ffffff' }}\r\n                />\r\n                <Chip \r\n                  icon={ <FaceIcon style={{ color: '#ffffff' }}/> } \r\n                  label={ movieDetail.popularity }\r\n                  style={{ backgroundColor: '#212121', color: '#ffffff' }}\r\n                />\r\n                <Chip \r\n                  icon={ <AccessTimeIcon style={{ color: '#ffffff' }}/> } \r\n                  label={ `${movieDetail.runtime} minute` }\r\n                  style={{ backgroundColor: '#212121', color: '#ffffff' }}\r\n                />\r\n                <Chip \r\n                  icon={ <AttachMoneyIcon style={{ color: '#ffffff' }}/> } \r\n                  label={ `Budget: ${movieDetail.budget === 0 ? 'Not available' : movieDetail.budget.toLocaleString()}` }\r\n                  style={{ backgroundColor: '#212121', color: '#ffffff' }}\r\n                />\r\n                <Chip \r\n                  label={ movieDetail.release_date } \r\n                  style={{ backgroundColor: '#212121', color: '#ffffff' }}\r\n                />\r\n              </div>\r\n              <div className='overview-containter'>\r\n                <h1 style={{ fontSize: '1.3em' }}>Overview:</h1>\r\n                <p style={{ fontSize: '1.2em' }}>{ movieDetail.overview }</p>\r\n              </div>\r\n            </CardContent>\r\n            <div className='card-actions'>\r\n              <div\r\n                className={ `${classes.watchButton} ${classes.makeCenter}` }\r\n                onClick={ () => {\r\n                  window.open(`${ movieDetail.homepage }`);\r\n                }}\r\n              >\r\n                Watch\r\n              </div>\r\n              <div\r\n                className={ `${classes.closeButton} ${classes.makeCenter}` }\r\n                onClick={\r\n                  () => {\r\n                    props.handleClose();\r\n                  }\r\n                }>\r\n                Close\r\n              </div>\r\n            </div>\r\n          </CardActionArea>\r\n        </div>\r\n      }\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n","import React, { useState } from \"react\";\r\nimport MovieImage from \"./movie/MovieImage\";\r\nimport MovieTextContainer from \"./movie/MovieTextContainer\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Movies from \"../models/Movies\";\r\nimport MovieDetail from \"./movie/MovieDetail\";\r\n\r\nconst WaitForMovie = withStyles(() => ({\r\n  root: {\r\n    color: '#212121',\r\n    width: '64px !important',\r\n    height: '64px !important',\r\n  },\r\n}))(CircularProgress);\r\n\r\nconst TrendContainer = (props) => {\r\n  const [ movieDetailData, setMovieDetailData ] = useState(null);\r\n  const [ isModalOpen, setIsModalOpen ] = useState(false);\r\n  const movieTrends = props.movies;\r\n  const genres = props.movieGenres;\r\n\r\n  const handleClick = (id) => {\r\n    const getMovieDetail = async () => {\r\n      const data = await Movies.getDetailMovie(id);\r\n      setMovieDetailData(data);\r\n    }\r\n\r\n    getMovieDetail();\r\n    setIsModalOpen(!isModalOpen);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsModalOpen(!isModalOpen);\r\n    setMovieDetailData(null);\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <h1 className='heading1 bottom-margin'>\r\n        { props.heading }\r\n      </h1>\r\n      {movieTrends !== null && movieTrends.length < 1 && <h1 className='not-found'>Not Found </h1> }\r\n      <div className='container-movie'>\r\n      { \r\n        movieTrends === null\r\n        ? <WaitForMovie />\r\n        : movieTrends.map((movie) => {\r\n          return(\r\n            <div \r\n              className='wrap-card-movie bottom-margin' \r\n              key={ movie.id } \r\n              onClick={ () => {\r\n                handleClick(movie.id);\r\n                props.closeHandleBack(false);\r\n              }}>\r\n              <MovieImage \r\n                url={ `https://image.tmdb.org/t/p/original/${movie.poster_path}` }\r\n                name={ movie.title }\r\n              />\r\n              <MovieTextContainer \r\n                title={ movie.original_title }\r\n                idGenre={ movie.genre_ids }\r\n                release={ movie.release_date }\r\n                rating={ movie.vote_average }\r\n                popularity={ movie.popularity }\r\n                overview={ movie.overview }\r\n                genres= { genres }\r\n              />\r\n            </div>\r\n          );\r\n        })\r\n      }\r\n      </div>\r\n      { isModalOpen && \r\n        <MovieDetail \r\n          handleClose={ handleClose } \r\n          movieDetail={ movieDetailData } \r\n          checkFavoriteCount={ props.checkFavoriteCount }/>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrendContainer;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  const year = new Date().getFullYear();\r\n  \r\n  return(\r\n    <footer className='text-grey'>\r\n      <p style={{ textAlign: 'center' }}>Copyright ⓒ { year }</p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { makeStyles } from '@material-ui/core';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n    color: theme.palette.common.white,\r\n    backgroundColor: '#212121',\r\n    '&:hover': {\r\n      backgroundColor: '#000000',\r\n    },\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst FabComponent = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return(\r\n    <Fab \r\n      variant=\"extended\" \r\n      className={ classes.fab } \r\n      onClick={ () => {\r\n        props.handleBack(false);\r\n      }}>\r\n      <ArrowBackIcon className={classes.extendedIcon} />\r\n      Back\r\n    </Fab>\r\n  );\r\n};\r\n\r\nexport default FabComponent;\r\n","import { useState } from \"react\";\r\nimport Supabase from '../models/SupabaseClient';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: theme.spacing(3),\r\n    height: '90vh',\r\n    paddingTop: '30vh',\r\n  },\r\n  buttonSubmit: {\r\n    backgroundColor: '#212121',\r\n    color: '#ffffff'\r\n  }\r\n}));\r\n\r\nconst Auth = () => {\r\n  const classes = useStyles();\r\n\r\n  const [ loading, setLoading ] = useState(false);\r\n  const [ email, setEmail ] = useState('');\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const { error } = await Supabase.auth.signIn({ email });\r\n\r\n      if (error) throw error;\r\n      alert('Check your email for login link!');\r\n    } catch (error) {\r\n      alert(error.error_description || error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.container} maxWidth=\"xs\">\r\n      <h1 style={{ marginBottom: '10%', textAlign: 'center' }}>Movie Trend</h1>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  name=\"email\"\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  placeholder=\"Your email\"\r\n                  value={email}\r\n                  onChange={ (event) => setEmail(event.target.value) }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button \r\n              className={ classes.buttonSubmit }\r\n              fullWidth \r\n              type=\"submit\"\r\n              onClick={ (event) => {\r\n                event.preventDefault();\r\n                handleLogin(email);\r\n              }}\r\n              variant=\"contained\">\r\n              { loading ? <span>Loading</span> : <span>Send magic link</span> }\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import Supabase from \"../models/SupabaseClient\";\r\n\r\nconst favoriteCount = async () => {\r\n  try {\r\n    const userEmail = Supabase.auth.user().email;\r\n\r\n    const { data, error, status } = await Supabase\r\n      .from('movie_favorite')\r\n      .select('email')\r\n      .match({ email: userEmail });\r\n\r\n    if (error && status !== 406) throw error;\r\n\r\n    if (data) {\r\n      return data.length;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default favoriteCount;\r\n\r\n","import Supabase from \"../models/SupabaseClient\";\r\n\r\nconst getFavorite = async () => {\r\n  try {\r\n    const user = await Supabase.auth.user().email;\r\n\r\n    const { data, error, status } = await Supabase\r\n      .from('movie_favorite')\r\n      .select('*')\r\n      .match({ email: user });\r\n\r\n    if (error && status !== 406) throw error;\r\n\r\n    if (data) return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default getFavorite;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Movies from '../models/Movies.js';\r\nimport Search from \"./Search\";\r\nimport TrendContainer from './TrendContainer';\r\nimport Footer from \"./Footer\";\r\nimport FabComponent from \"./FabComponent\";\r\nimport Supabase from '../models/SupabaseClient';\r\nimport Auth from './Auth';\r\nimport favoriteCount from \"../utils/favoriteCount\";\r\nimport getFavorite from \"../utils/getFavorite\";\r\n\r\nconst App = () => {\r\n  const [ session, setSession ] = useState(null);\r\n  const [ movies, setMovies ] = useState(null);\r\n  const [ movieGenres, setMovieGenres] = useState(null);\r\n  const [ isSearch, setSearch ] = useState(false);\r\n  const [ favoriteQuantity, setFavoriteQuantity ] = useState(0);\r\n  const [ heading, setHeading ] = useState('Movie Trending');\r\n\r\n  const handleClickSearch = useCallback((text) => {\r\n    if (text) {\r\n      const getSearchMovie = async () => {\r\n        const data = await Movies.getMovieSearch(text);\r\n        setMovies(data);\r\n      };\r\n      getSearchMovie();\r\n      setHeading('Search result');\r\n      setSearch(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleBack = (isAppear) => {\r\n    const getDataMovies = async () => {\r\n      const data = await Movies.getMovie();\r\n      setMovies(data);\r\n      setSearch(isAppear);\r\n    };\r\n    setHeading('Movie Trending');\r\n    getDataMovies();\r\n  }\r\n\r\n  const handleCheckFavoriteQuantity = async () => {\r\n    const quantity = await favoriteCount()\r\n    setFavoriteQuantity(quantity);\r\n  };\r\n\r\n  const onFavoriteButtonClick = async () => {\r\n    const favorite = await getFavorite();\r\n    setMovies(favorite);\r\n    setHeading('Your Favorite Movie');\r\n    setSearch(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSession(Supabase.auth.session());\r\n    Supabase.auth.onAuthStateChange((_event, session) => {\r\n      setSession(session);\r\n    });\r\n\r\n    const getDataMovies = async () => {\r\n      const data = await Movies.getMovie();\r\n      setMovies(data);\r\n    };\r\n\r\n    const getMovieGenres = async () => {\r\n      const data = await Movies.getGenres();\r\n      setMovieGenres(data);\r\n    };\r\n    \r\n    getDataMovies();\r\n    getMovieGenres();\r\n    handleCheckFavoriteQuantity();\r\n  }, []);\r\n\r\n  return(\r\n    <div>\r\n    { !session ? <Auth /> : \r\n      <div>\r\n        <Header favoriteQuantity={ favoriteQuantity } onClick={ onFavoriteButtonClick } />\r\n        <Search className='search-input' handleClick={ handleClickSearch }/>\r\n        <TrendContainer \r\n          heading={ heading }\r\n          movies={ movies } \r\n          movieGenres={ movieGenres } \r\n          isSearch={ isSearch }\r\n          checkFavoriteCount = { handleCheckFavoriteQuantity }\r\n          closeHandleBack={ handleBack }  \r\n        />\r\n        { isSearch && <FabComponent handleBack={ handleBack }/>}\r\n        <Footer />\r\n      </div>\r\n    }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/App';\nimport './style.css';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}